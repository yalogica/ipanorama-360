/*!
 * Transition Name: Directional Warp
 */
!function(e){(function(e){"use strict";var t={name:"DirectionalWarp",effect:function(e,t){this.viewer=t;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2},direction:{value:new THREE.Vector2(-1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","const float smoothness = 0.5;","const vec2 center = vec2(0.5, 0.5);","uniform vec2 direction;","void main() {","vec2 uv = vUv;","vec2 v = normalize(direction);","v /= abs(v.x) + abs(v.y);","float d = v.x * center.x + v.y * center.y;","float m = 1.0 - smoothstep(-smoothness, 0.0, v.x * uv.x + v.y * uv.y - (d - 0.5 + progress * (1.0 + smoothness)));","vec4 fromColor = getFromColor((uv - 0.5) * (1.0 - m) + 0.5);","vec4 toColor = getToColor((uv - 0.5) * m + 0.5);","gl_FragColor = mix(fromColor, toColor, m);","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};t.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,t,o){},onUpdate:function(e,t,o){},onComplete:function(e,t){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.DirectionalWarp=t})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);