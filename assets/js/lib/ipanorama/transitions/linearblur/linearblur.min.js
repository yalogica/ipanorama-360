/*!
 * Transition Name: Linear Blur
 */
!function(e){(function(e){"use strict";var t={name:"LinearBlur",effect:function(e,t){this.viewer=t;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2},intensity:{value:.1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","uniform float intensity;","const int passes = 6;","void main() {","vec2 uv = vUv;","vec4 c1 = vec4(0.0);","vec4 c2 = vec4(0.0);","float disp = intensity*(0.5-distance(0.5, progress));","for (int xi=0; xi<passes; xi++) {","float x = float(xi) / float(passes) - 0.5;","for (int yi=0; yi<passes; yi++) {","float y = float(yi) / float(passes) - 0.5;","vec2 v = vec2(x,y);","float d = disp;","c1 += getFromColor(uv + d*v);","c2 += getToColor(uv + d*v);","}","}","c1 /= float(passes*passes);","c2 /= float(passes*passes);","gl_FragColor = mix(c1, c2, progress);","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};t.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,t,i){},onUpdate:function(e,t,i){},onComplete:function(e,t){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.LinearBlur=t})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);