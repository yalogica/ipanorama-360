/*!
 * Transition Name: Bounce
 */
!function(e){(function(e){"use strict";var t={name:"Bounce",effect:function(e,t){this.viewer=t;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2},shadow_colour:{value:new THREE.Vector4(0,0,0,.6)},shadow_height:{value:.075},bounces:{value:3}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","uniform vec4 shadow_colour;","uniform float shadow_height;","uniform float bounces;","void main() {","vec2 uv = vUv;","float time = progress;","float stime = sin(time * PI / 2.);","float phase = time * PI * bounces;","float y = (abs(cos(phase))) * (1.0 - stime);","float d = uv.y - y;","gl_FragColor = mix(","mix(","getToColor(uv),","shadow_colour,","step(d, shadow_height) * (1. - mix(","((d / shadow_height) * shadow_colour.a) + (1.0 - shadow_colour.a),","1.0,","smoothstep(0.95, 1., progress)","))","),","getFromColor(vec2(uv.x, uv.y + (1.0 - y))),","step(d, 0.0)",");","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};t.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,t,o){},onUpdate:function(e,t,o){},onComplete:function(e,t){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.Bounce=t})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);