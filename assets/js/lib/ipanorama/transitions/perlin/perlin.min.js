/*!
 * Transition Name: Perlin
 */
!function(e){(function(e){"use strict";var o={name:"Perlin",effect:function(e,o){this.viewer=o;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2},scale:{value:4},smoothness:{value:.01},seed:{value:12.9898}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","uniform float scale;","uniform float smoothness;","uniform float seed;","float random(vec2 co) {","highp float a = seed;","highp float b = 78.233;","highp float c = 43758.5453;","highp float dt= dot(co.xy ,vec2(a,b));","highp float sn= mod(dt,3.14);","return fract(sin(sn) * c);","}","float noise (in vec2 st) {","vec2 i = floor(st);","vec2 f = fract(st);","float a = random(i);","float b = random(i + vec2(1.0, 0.0));","float c = random(i + vec2(0.0, 1.0));","float d = random(i + vec2(1.0, 1.0));","vec2 u = f*f*(3.0-2.0*f);","return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;","}","void main() {","vec2 uv = vUv;","vec4 fromColor = getFromColor(uv);","vec4 toColor = getToColor(uv);","float n = noise(uv * scale);","float p = mix(-smoothness, 1.0 + smoothness, progress);","float lower = p - smoothness;","float higher = p + smoothness;","float q = smoothstep(lower, higher, n);","gl_FragColor = mix(fromColor, toColor, 1.0 - q);","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};o.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,o,t){},onUpdate:function(e,o,t){},onComplete:function(e,o){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.Perlin=o})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);