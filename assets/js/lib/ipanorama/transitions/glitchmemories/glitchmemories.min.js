/*!
 * Transition Name: Glitch Memories
 */
!function(e){(function(e){"use strict";var t={name:"GlitchMemories",effect:function(e,t){this.viewer=t;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","void main() {","vec2 uv = vUv;","vec2 block = floor(uv.xy / vec2(16));","vec2 uv_noise = block / vec2(64);","uv_noise += floor(vec2(progress) * vec2(1200.0, 3500.0)) / vec2(64);","vec2 dist = progress > 0.0 ? (fract(uv_noise) - 0.5) * 0.3 *(1.0 -progress) : vec2(0.0);","vec2 red   = uv + dist * 0.2;","vec2 green = uv + dist * 0.3;","vec2 blue  = uv + dist * 0.5;","gl_FragColor = vec4(","mix(getFromColor(red),   getToColor(red),   progress).r,","mix(getFromColor(green), getToColor(green), progress).g,","mix(getFromColor(blue),  getToColor(blue),  progress).b,","1.0",");","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};t.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,t,o){},onUpdate:function(e,t,o){},onComplete:function(e,t){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.GlitchMemories=t})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);