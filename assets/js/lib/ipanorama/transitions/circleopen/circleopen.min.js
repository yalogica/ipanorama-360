/*!
 * Transition Name: Circle Open
 */
!function(e){(function(e){"use strict";var t={name:"CircleOpen",effect:function(e,t){this.viewer=t;this.shader={uniforms:{texture1:{value:null},texture2:{value:null},progress:{value:0},time:{value:0},timeDelta:{value:0},resolution:{value:new THREE.Vector2},smoothness:{value:.3},opening:{value:true}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D texture1;","uniform sampler2D texture2;","uniform float progress;","uniform float time;","uniform float timeDelta;","uniform vec2 resolution;","const float PI = 3.141592653589793;","vec4 getFromColor(vec2 uv) {","return texture2D(texture1, uv);","}","vec4 getToColor(vec2 uv) {","return texture2D(texture2, uv);","}","uniform float smoothness;","uniform bool opening;","const vec2 center = vec2(0.5, 0.5);","const float SQRT_2 = 1.414213562373;","void main() {","vec2 uv = vUv;","float x = opening ? progress : 1.-progress;","float m = smoothstep(-smoothness, 0.0, SQRT_2*distance(center, uv) - x*(1.+smoothness));","vec4 fromColor = getFromColor(uv);","vec4 toColor = getToColor(uv);","gl_FragColor = mix(fromColor, toColor, opening ? 1.0-m : m);","}"].join("\n"),side:THREE.DoubleSide};this.material=new THREE.ShaderMaterial(this.shader);this.init(e)}};t.effect.prototype={init:function(e){},getMaterial:function(){return this.material},destroy:function(){this.material.dispose()},onStart:function(e,t,o){},onUpdate:function(e,t,o){},onComplete:function(e,t){}},e.SceneTransitionEffect=e.SceneTransitionEffect||{},e.SceneTransitionEffect.CircleOpen=t})((e=e||self).IPANORAMA=e.IPANORAMA||{})}(this);